Index: BRANCH_1_4_X/src/cursor.C
===================================================================
--- BRANCH_1_4_X/src/cursor.C (revision 16431)
+++ BRANCH_1_4_X/src/cursor.C (revision 16831)
@@ -99,5 +99,18 @@
 			int yo;
 			InsetBase const * inset = &it.inset();
-			Point o = theCoords.getInsets().xy(inset);
+			std::map<InsetBase const *, Point> const & data =
+				theCoords.getInsets().getData();
+			std::map<InsetBase const *, Point>::const_iterator I = data.find(inset);
+
+			// FIXME: in the case where the inset is not in the cache, this
+			// means that no part of it is visible on screen. In this case
+			// we don't do elaborate search and we just return the forwarded
+			// DocIterator at its beginning.
+			if (I == data.end()) {
+				it.top().pos() = 0;
+				return it;
+			}
+
+			Point o = I->second;
 			inset->cursorPos(it.top(), c.boundary(), xo, yo);
 			// Convert to absolute
Index: BRANCH_1_4_X/src/coordcache.h
===================================================================
--- BRANCH_1_4_X/src/coordcache.h (revision 10321)
+++ BRANCH_1_4_X/src/coordcache.h (revision 16831)
@@ -95,4 +95,6 @@
 	typedef std::map<T const *, Point> cache_type;
 	cache_type data_;
+public:
+	cache_type const & getData() const { return data_; }
 };
 
